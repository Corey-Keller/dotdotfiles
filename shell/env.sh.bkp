#!/bin/sh
# ============================================================
# Exports
#	This file is for shell agnostic environment variables
# ============================================================


(($VERBOSE_SHELL_STARTUP)) && echo "Setting shell agnostic environment variables"
export DOTFILESDIR="$HOME/.dotfiles"

export DISPLAY=localhost:0.0

# ============================================================
# Directories
# ============================================================
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# XDG Base Directories
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Directory under which user specific data files should be stored.
export XDG_DATA_HOME="$DOTFILESDIR/xdg/data"
# Directories to search for data files in addition to $XDG_DATA_HOME
export XDG_DATA_DIRS="/usr/local/share/:/usr/share/"
# Directory under which user specific configuration files should be stored.
export XDG_CONFIG_HOME="$DOTFILESDIR/xdg/config"
# Directories to search for configuration files in addition to $XDG_CONFIG_HOME
export XDG_CONFIG_DIRS="/etc/xdg"
# Directory under which user specific non-essential data files should be stored.
export XDG_CACHE_HOME="$HOME/.cache"
# Directory under which user specific non-essential runtime files and other
# file objects (such as sockets, named pipes, ...) should be stored.
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Dotfiles Sub-Directories
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export DFDIR_SHELL="$DOTFILESDIR/shell"
export DFDIR_ZSH="$DOTFILESDIR/zsh"
export DFDIR_NANO="$DOTFILESDIR/nano"
export DFDIR_BASH="$DOTFILESDIR/bash"
export DFDIR_XDG="$DOTFILESDIR/xdg"


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Source File Directories
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export SHAREDSOURCEDIR="/src"
[[ -d "$SHAREDSOURCEDIR" && -w "$SHAREDSOURCEDIR" && -x "$SHAREDSOURCEDIR" ]] &&
GHDIR="$SHAREDSOURCEDIR/github.com" || GHDIR="$HOME/src/github.com"
export GHDIR="${GHDIR}"
export SHAREDBINDIR="$SHAREDSOURCEDIR/bin"
export GOBIN="$SHAREDBINDIR"
export GOROOT_FINAL="$SHAREDSOURCEDIR/go"
# export EDITOR=vim

editorPreferenceOrder=('nvim' 'vim' 'nano' 'vi' 'ed')
for editorChoice in "${editorPreferenceOrder[@]}"; do
  if command -v $editorChoice >/dev/null 2>&1; then
    export EDITOR=$editorChoice
    break
  fi
done

export SUDO_EDITOR=${EDITOR}
export VISUAL=${EDITOR}
export PAGER=less
export HISTSIZE='1000000'

# ============================================================
# Interactive Shell Stuff
# ============================================================
if [[ $- == *i* ]]; then
  (($VERBOSE_SHELL_STARTUP)) && echo "Setting interactive shell agnostic environment variables"
  export GLOBAL_THEME="artesanal"
  (($VERBOSE_SHELL_STARTUP)) && echo "Setting global theme"
  (($VERBOSE_SHELL_STARTUP)) && echo "Finished setting global theme"
  # case $GLOBAL_THEME in base16-*)
  #   (($VERBOSE_SHELL_STARTUP)) && echo "Setting Base16 stuff"
  #   export BASE16_SHELL="$DOTFILESDIR/base16/output/shell"
  #   [ -n "$PS1" ] &&
  #     [ -s "$BASE16_SHELL/profile_helper.sh" ] &&
  #       eval "$("$BASE16_SHELL/profile_helper.sh")" &&
  #       export GLOBAL_THEME="base16-$BASE16_THEME"
  #   (($VERBOSE_SHELL_STARTUP)) && echo "Finished setting Base16 stuff"
  # esac
  source "$DFDIR_SHELL/LS_COLORS/base16.LS_COLORS.sh"
  # if [[ -x "$DFDIR_SHELL/LS_COLORS/$GLOBAL_THEME.LS_COLORS.sh" ]]; then
  #   source "$DFDIR_SHELL/LS_COLORS/$GLOBAL_THEME.LS_COLORS.sh"
  # elif [[ -r "$DFDIR_SHELL/dircolors/$GLOBAL_THEME.dircolors" ]]; then
  #   dircolors "$DFDIR_SHELL/dircolors/$GLOBAL_THEME.dircolors" > "$DFDIR_SHELL/LS_COLORS/$GLOBAL_THEME.LS_COLORS.sh" &&
  #   chmod 755 "$DFDIR_SHELL/LS_COLORS/$GLOBAL_THEME.LS_COLORS.sh" &&
  #   source "$DFDIR_SHELL/LS_COLORS/$GLOBAL_THEME.LS_COLORS.sh"
  # fi
  (($VERBOSE_SHELL_STARTUP)) && echo "Finished setting interactive shell agnostic environment variables"
fi
#export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
GPG_TTY=$(tty)
export GPG_TTY
#gpg-connect-agent updatestartuptty /bye >/dev/null
#gpgconf --launch gpg-agent
(($VERBOSE_SHELL_STARTUP)) && echo "Setting path variable"
. "$DFDIR_SHELL/path.sh"
(($VERBOSE_SHELL_STARTUP)) && echo "Finished setting path variable"

# ============================================================
# Miscellaneous Environment Variables
# ============================================================

# ============================================================
# Command Specific Environment Variables
# ============================================================
## gtags exports NEED TO FIX!
export GTAGSCONF=/usr/local/share/gtags/gtags.conf
export GTAGSLABEL=new-ctags

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# [n]vim
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export VIMCONFIGDIR="$XDG_CONFIG_HOME/nvim"
export VIMDATADIR="$XDG_DATA_HOME/nvim"
export MYVIMRC="$VIMCONFIGDIR/init.vim"
export VIMINIT="source $MYVIMRC"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# git
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export GIT_EDITOR=${EDITOR:=vim}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# less
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# turn off .lesshst file
export LESSHISTFILE="-"
# color highlighting in less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
export LESS="Ri"

# make less more friendly for non-text input files, see lesspipe(1)


## if the above fails, try this too.
if [ $(type -p lesspipe >/dev/null 2>&1 && eval "$(lesspipe)") ]; then
    ## lesspipe if installed ##
    LESSPIPEX="$(type -p lesspipe.sh)"
    [ -x "${LESSPIPEX}" ] && export LESSOPEN="|${LESSPIPEX} %s"
fi

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# fd
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
command -v fd >/dev/null 2>&1 &&
{
	has_fd_command=1
	export FD_OPTS='--hidden --follow --exclude .git'
	alias fd='fd $FD_OPTS'
}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# rg
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
command -v rg >/dev/null 2>&1 &&
{
	has_rg_command=1
	export RG_OPTS='--hidden --follow --smart-case --no-messages'
	alias rg='rg $RG_OPTS'
}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# fzf
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export FZF_DEFAULT_OPTS="--history=$XDG_CACHE_HOME/.fzf_history --history-size=50000"

if [ "$has_fd_command" -eq 1 ]; then
	export FZF_DEFAULT_COMMAND="fd --type file --color=never $FD_OPTS"
elif [ "$has_rg_command" -eq 1 ]; then
	export FZF_DEFAULT_COMMAND="rg --files $RG_OPTS"
fi

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# pyenv
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export PATH="${HOME}/.pyenv/bin:${PATH}"
command -v pyenv >/dev/null 2>&1 &&
{
	eval "$(pyenv init -)"
	eval "$(pyenv virtualenv-init -)"
	export PYENV_ROOT="${PYENV_ROOT:-${HOME}/.pyenv}"
	export PYENV_SHELL="${PYENV_SHELL:-$SHELL}"
}
path_setup

